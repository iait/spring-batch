
CREATE TABLE batch_errors(
    job_execution_id bigint NOT NULL,
    error_id int NOT NULL,
    etapa varchar(10) NOT NULL,
    elemento int NOT NULL,
    descripcion varchar(255) NOT NULL,
    linea bigint NULL,
    input varchar(255) NULL,
    entidad varchar(255) NULL,
    stack_trace varchar(max) NOT NULL
);

ALTER TABLE batch_errors
ADD CONSTRAINT PK_batch_errors PRIMARY KEY (job_execution_id, error_id);

-------------------------------------------------------------------------------

CREATE TABLE BATCH_JOB_EXECUTION(
    JOB_EXECUTION_ID bigint NOT NULL,
    VERSION bigint NULL,
    JOB_INSTANCE_ID bigint NOT NULL,
    CREATE_TIME datetime NOT NULL,
    START_TIME datetime NULL,
    END_TIME datetime NULL,
    STATUS varchar(10) NULL,
    EXIT_CODE varchar(2500) NULL,
    EXIT_MESSAGE varchar(2500) NULL,
    LAST_UPDATED datetime NULL,
    JOB_CONFIGURATION_LOCATION varchar(2500) NULL
);

ALTER TABLE BATCH_JOB_EXECUTION
ADD CONSTRAINT PK_BATCH_JOB_EXECUTION PRIMARY KEY (JOB_EXECUTION_ID);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT(
    JOB_EXECUTION_ID bigint NOT NULL,
    SHORT_CONTEXT varchar(2500) NOT NULL,
    SERIALIZED_CONTEXT text NULL
);

ALTER TABLE BATCH_JOB_EXECUTION_CONTEXT
ADD CONSTRAINT PK_BATCH_JOB_EXECUTION_CONTEXT PRIMARY KEY (JOB_EXECUTION_ID);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS(
    JOB_EXECUTION_ID bigint NOT NULL,
    TYPE_CD varchar(6) NOT NULL,
    KEY_NAME varchar(100) NOT NULL,
    STRING_VAL varchar(250) NULL,
    DATE_VAL datetime NULL,
    LONG_VAL bigint NULL,
    DOUBLE_VAL float NULL,
    IDENTIFYING char(1) NOT NULL
);

CREATE TABLE BATCH_JOB_EXECUTION_SEQ(
    ID bigint IDENTITY(1,1) NOT NULL
);

CREATE TABLE BATCH_JOB_INSTANCE(
    JOB_INSTANCE_ID bigint NOT NULL,
    VERSION bigint NULL,
    JOB_NAME varchar(100) NOT NULL,
    JOB_KEY varchar(32) NOT NULL
);

ALTER TABLE BATCH_JOB_INSTANCE
ADD CONSTRAINT PK_BATCH_JOB_INSTANCE PRIMARY KEY (JOB_INSTANCE_ID);

CREATE TABLE BATCH_JOB_SEQ(
    ID bigint IDENTITY(1,1) NOT NULL
);

CREATE TABLE BATCH_STEP_EXECUTION(
    STEP_EXECUTION_ID bigint NOT NULL,
    VERSION bigint NOT NULL,
    STEP_NAME varchar(100) NOT NULL,
    JOB_EXECUTION_ID bigint NOT NULL,
    START_TIME datetime NOT NULL,
    END_TIME datetime NULL,
    STATUS varchar(10) NULL,
    COMMIT_COUNT bigint NULL,
    READ_COUNT bigint NULL,
    FILTER_COUNT bigint NULL,
    WRITE_COUNT bigint NULL,
    READ_SKIP_COUNT bigint NULL,
    WRITE_SKIP_COUNT bigint NULL,
    PROCESS_SKIP_COUNT bigint NULL,
    ROLLBACK_COUNT bigint NULL,
    EXIT_CODE varchar(2500) NULL,
    EXIT_MESSAGE varchar(2500) NULL,
    LAST_UPDATED datetime NULL
);

ALTER TABLE BATCH_STEP_EXECUTION
ADD CONSTRAINT PK_BATCH_STEP_EXECUTION PRIMARY KEY (STEP_EXECUTION_ID);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT(
    STEP_EXECUTION_ID bigint NOT NULL,
    SHORT_CONTEXT varchar(2500) NOT NULL,
    SERIALIZED_CONTEXT text NULL
);

ALTER TABLE BATCH_STEP_EXECUTION_CONTEXT
ADD CONSTRAINT PK_BATCH_STEP_EXECUTION_CONTEXT PRIMARY KEY (STEP_EXECUTION_ID);

CREATE TABLE BATCH_STEP_EXECUTION_SEQ(
    ID bigint IDENTITY(1,1) NOT NULL
);

ALTER TABLE BATCH_JOB_EXECUTION 
ADD CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY(JOB_INSTANCE_ID)
REFERENCES BATCH_JOB_INSTANCE (JOB_INSTANCE_ID);

ALTER TABLE BATCH_JOB_EXECUTION_CONTEXT 
ADD CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY(JOB_EXECUTION_ID)
REFERENCES BATCH_JOB_EXECUTION (JOB_EXECUTION_ID);

ALTER TABLE BATCH_JOB_EXECUTION_PARAMS 
ADD CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY(JOB_EXECUTION_ID)
REFERENCES BATCH_JOB_EXECUTION (JOB_EXECUTION_ID);

ALTER TABLE BATCH_STEP_EXECUTION 
ADD CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY(JOB_EXECUTION_ID)
REFERENCES BATCH_JOB_EXECUTION (JOB_EXECUTION_ID);

ALTER TABLE BATCH_STEP_EXECUTION_CONTEXT 
ADD CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY(STEP_EXECUTION_ID)
REFERENCES BATCH_STEP_EXECUTION (STEP_EXECUTION_ID);

